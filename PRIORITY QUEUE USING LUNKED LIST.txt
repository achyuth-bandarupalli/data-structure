#include <stdio.h>
#include <stdlib.h>

typedef struct Node
{
    int d;   // data
    int p;   // priority
    struct Node *next; // address of a node
} node;

typedef struct head
{
    node *top; // front or the head of the priority queue
} head;

node *create(int d, int p) // creating a new node
{
    node *newnode = (node *)malloc(sizeof(node));

    newnode->d = d;
    newnode->p = p;
    newnode->next = NULL;

    return newnode;
}

void enqueue(head *f, int d, int p) // inserting the node into the priority queue
{
    node *newnode = create(d, p);

    if (f->top == NULL || p > f->top->p)
    {
        newnode->next = f->top;
        f->top = newnode;
    }
    else
    {
        node *temp = f->top;
        while (temp != NULL && temp->next->p >= p)
        {
            temp = temp->next;
        }
        newnode->next = temp->next;
        temp->next = newnode;
    }
}

void dequeue(head *f) // deleting the node from the priority queue
{
    if (f->top == NULL)
    {
        printf("Queue is empty\n");
        return;
    }

    node *temp = f->top;
    int d = temp->d;
    int p = temp->p;
    f->top = temp->next;

    free(temp);

    printf("\nDequeued element (data:priority): | %d : %d | \n", d, p);
}

void display(head *f) // display the nodes of the priority queue
{
    if (f->top == NULL)
    {
        printf("Queue is empty\n");
        return;
    }

    printf("Priority Queue (data:priority):\n");
    node *temp = f->top;
    while (temp != NULL)
    {
        printf("| %d : %d | -> ", temp->d, temp->p);
        temp = temp->next;
    }
    printf("NULL\n");
}

int main()
{
    head f;
    f.top = NULL;

    int d, p, c, b = 0;

    do // Menu function for the Priority queue
    {
        printf("\nPriority Queue Menu:\n");
        printf("1. Enqueue\n");
        printf("2. Dequeue\n");
        printf("3. Display\n");
        printf("4. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &c);
        switch (c)
        {
        case 1:
            printf("Enter the number:");
            scanf("%d", &d);
            printf("Enter the priority:");
            scanf("%d", &p);
            enqueue(&f, d, p);
            break;
        case 2:
            dequeue(&f);
            break;
        case 3:
            display(&f);
            break;
        case 4:
            exit(0);
        default:
            printf("Invalid choice. Please try again.\n");
            printf("Enter your choice: ");
            scanf("%d", &c);
        }
    } while (1);
    return 0;
}
